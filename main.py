import json
from ipfabric import IPFClient
from ipfabric.tools import Vulnerabilities
from collections import defaultdict
import pickle


with open('keywords.json', 'r') as f:
    KEYWORDS = json.load(f)


def load_ipf():
    ipf = IPFClient()
    devices = ipf.inventory.devices.all()
    vuln = Vulnerabilities(ipf=ipf, cve_limit=200)
    versions = vuln.check_versions()
    cves = defaultdict(dict)
    for v in versions:
        if v.family not in cves[v.vendor]:
            cves[v.vendor][v.family] = defaultdict(dict)
        cves[v.vendor][v.family][v.version] = v.cves
    return devices, cves


if __name__ == '__main__':
    # devices, cves = load_ipf()
    # with open('ipf.pickle', 'wb') as f:
    #     pickle.dump(devices, f)
    #     pickle.dump(cves, f)

    with open('ipf.pickle', 'rb') as f:
        devices = pickle.load(f)
        cve_dict = pickle.load(f)
    cves = {cve for v in cve_dict.values() for f in v.values() for ver in f.values() for cve in ver.cves}

    no_desc = list()
    for cve in cves:
        match = 0
        for kw in KEYWORDS:
            if kw.lower() in cve.description.lower():
                match += 1
                KEYWORDS[kw]['CVEs'].append(cve)
        if match == 0:
            no_desc.append(cve)
    print()
    with open('cve.json', 'w') as f:
        json.dump([cve.__dict__ for cve in no_desc], f)
